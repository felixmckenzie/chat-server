// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  givenName String
  familyName String
  mobilePhone String
  email String @unique
  Address Address @relation(fields: [addressId], references: [id])
  addressId String @unique
  role Role @default(REGULAR)
  orders Order[]
}

enum Role {
ADMIN
REGULAR
}

model Address {
  id String @id @default(cuid())
  address_line_one String
  address_line_two String?
  city String
  state String
  postCode String
  user User?
}

model Product {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  price Float
  image String? 
  description String?
  orderItems OrderItem[]
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String @unique
  brand Brand @relation(fields: [brandId], references: [id])
  brandId String @unique
}

model Brand {
  id String @id @default(cuid())
  name String @unique
  description String
  products Product[]
}

model Category {
  id String @id @default(cuid())
  name String @unique
  products Product[] 
}

model Order {
id String @id @default(cuid())
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
user User @relation(fields: [userId], references: [id])
userId String
orderItems OrderItem[]
status OrderStatus @default(CREATED)
totalPrice Float
}

enum OrderStatus {
  CREATED
  PAID
  SHIPPED
  DELIVERED 
  CANCELLED
  REFUNDED
}

model OrderItem {
id String @id @default(cuid())
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
order Order @relation(fields: [orderId], references: [id])
product Product @relation(fields: [productId], references: [id])
productId String @unique
orderId String @unique
quantity Int

}

