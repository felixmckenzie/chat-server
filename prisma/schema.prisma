// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  clerkId        String?         @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  username       String
  email          String          @unique
  avatar         String?
  isOnline       Boolean?
  channels       Channel[]
  messages       Message[]
  contacts       Contact[]
  friendRequests FriendRequest[]
  receiver       FriendRequest?  @relation("Receiver")
  Contact        Contact?        @relation("Contact")
}

enum Role {
  ADMIN
  REGULAR
}

model Contact {
  id             Int    @id @default(autoincrement())
  user           User   @relation(fields: [userClerkId], references: [clerkId])
  userClerkId    String @unique
  contactUser    User   @relation("Contact", fields: [contactClerkId], references: [clerkId])
  contactClerkId String @unique
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model FriendRequest {
  id              Int                 @id @default(autoincrement())
  status          FriendRequestStatus
  sender          User                @relation(fields: [senderClerkId], references: [clerkId])
  senderClerkId   String              @unique
  receiver        User                @relation("Receiver", fields: [receiverClerkId], references: [clerkId])
  receiverClerkId String              @unique
}

model Channel {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String
  isGroupChat Boolean
  messages    Message[]
  members     User[]
}

model Message {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  text      String
  sender    User     @relation(fields: [userId], references: [id])
  userId    Int
  channel   Channel  @relation(fields: [chatId], references: [id])
  chatId    Int
}
